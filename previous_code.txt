import streamlit as st
import PyPDF2
from io import BytesIO
from collections import defaultdict

# Function to extract text from PDF file by page
def extract_text_from_pdf_by_page(file):
    pdf_reader = PyPDF2.PdfReader(file)
    pages_text = []
    for page_num in range(len(pdf_reader.pages)):
        page_text = pdf_reader.pages[page_num].extract_text()
        pages_text.append((page_text, page_num + 1))  # Store text with page number
    return pages_text

# Updated function to count occurrences of each term and their page numbers
def search_for_terms_and_count(pages_text, key_terms):
    term_details = defaultdict(lambda: {'count': 0, 'pages': set()})
    for page_text, page_num in pages_text:
        lower_page_text = page_text.lower()
        for term in key_terms:
            count = lower_page_text.count(term.lower())
            if count > 0:
                term_details[term]['count'] += count
                term_details[term]['pages'].add(page_num)
    return term_details

# Streamlit app to process multiple PDF uploads, search for key terms, count occurrences, and note page numbers
def main():
    st.title("PDF Folder Key Terms Finder")

    st.write("Upload multiple PDF files to search for key terms, see how many times they appear, and identify the pages they are found on.")

    uploaded_files = st.file_uploader("Choose PDF files", type="pdf", accept_multiple_files=True)

    key_terms_input = st.text_input("Enter key terms separated by comma")
    key_terms = [term.strip() for term in key_terms_input.split(",") if term]

    if st.button("Search"):
        if uploaded_files and key_terms:
            with st.spinner('Processing PDFs...'):
                results = {}
                for uploaded_file in uploaded_files:
                    bytes_data = uploaded_file.read()
                    pages_text = extract_text_from_pdf_by_page(BytesIO(bytes_data))
                    term_details = search_for_terms_and_count(pages_text, key_terms)
                    
                    if any(detail['count'] > 0 for detail in term_details.values()):
                        results[uploaded_file.name] = term_details

                if results:
                    for filename, details in results.items():
                        result_str = ', '.join([f"{term}: {detail['count']} times on pages {sorted(detail['pages'])}" for term, detail in details.items()])
                        st.success(f"{filename}: {result_str}")
                else:
                    st.info("No key terms found in the uploaded files.")
        else:
            st.warning("Please upload files and specify key terms.")

if __name__ == "__main__":
    main()